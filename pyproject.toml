[build-system]
build-backend = "setuptools.build_meta"

requires = [
    "setuptools>=64.0.0",
]

[project]
name = "edgetest"
description = "Bleeding edge dependency testing"
license = { text = "Apache Software License" }
authors = [
    { name = "Akshay Gupta", email = "akshay.gupta2@capitalone.com" },
    { name = "Faisal Dosani", email = "faisal.dosani@capitalone.com" },
    { name = "Jacob Dawang", email = "jacob.dawang@capitalone.com" },
]
requires-python = ">=3.10"
classifiers = [
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dynamic = [
    "readme",
    "version",
]

dependencies = [
    "cerberus>=1.3.0,<=1.3.7",
    "click>=7.0,<=8.2.1",
    "packaging>20.6,<=25.0",
    "pluggy>=1.3.0,<=1.6.0",
    "pyproject-fmt>=2.0.0,<=2.6.0",
    "tabulate>=0.8.9,<=0.9.0",
    "tomlkit>=0.11.4,<=0.13.3",
    "uv>=0.2.0,<=0.8.13",
]
optional-dependencies.build = [ "build", "bumpver", "twine", "wheel" ]
optional-dependencies.dev = [
    "edgetest[build]",
    "edgetest[docs]",
    "edgetest[qa]",
    "edgetest[tests]",
]
optional-dependencies.docs = [
    "furo",
    "pillow",
    "recommonmark",
    "sphinx",
    "sphinx-copybutton",
    "sphinx-tabs",
]
optional-dependencies.qa = [
    "mypy",
    "pre-commit",
    "ruff~=0.5",
    "types-click",
    "types-setuptools",
    "types-tabulate",
]
optional-dependencies.tests = [ "coverage", "pytest", "pytest-cov" ]

urls."Bug Tracker" = "https://github.com/capitalone/edgetest/issues"
urls."Documentation" = "https://capitalone.github.io/edgetest/"
urls."Source Code" = "https://github.com/capitalone/edgetest"
scripts.edgetest = "edgetest.interface:cli"

[tool.setuptools]
include-package-data = true
zip-safe = false

[tool.setuptools.dynamic]
version = { attr = "edgetest.__version__" }
readme = { file = [
    "README.md",
], content-type = "text/markdown" }

[tool.ruff]
target-version = "py39"
extend-include = [
    "*.ipynb",
]
lint.select = [
    "B",      # flake8-bugbear
    "C",      # flake8-comprehensions
    "D",      # pydocstyle
    "E",      # pycodestyle errors
    "F",      # pyflakes
    "I",      # isort
    "LOG",    # flake8-logging
    "RUF",    # Ruff errors
    "SIM",    # flake8-simplify
    "T20",    # flake8-print
    "TID252", # flake8-tidy-imports ban relative imports
    "UP",     # pyupgrade
    "W",      # pycodestyle warnings
]
lint.ignore = [
    "C901",   # Add back in later
    "D206",   # Docstring indentation. Using formatter instead.
    "D300",   # Use triple single quotes. Using formatter instead.
    "E111",   # Check indentation level. Using formatter instead.
    "E114",   # Check indentation level. Using formatter instead.
    "E117",   # Check indentation level. Using formatter instead.
    "E203",   # Check whitespace. Using formatter instead.
    "E501",   # Line too long. Using formatter instead.
    "SIM105", # Use ``contextlib.suppress(FileNotFoundError)`` insetad of try - execpt - pass.
    "SIM108", # Use ternary operator instead of if-else blocks.
    "UP006",  # ``typing.x`` is deprecated, use ``x`` instead
    "UP035",  # ``typing.x`` is deprecated, use ``x`` instead
]
lint.per-file-ignores."**/{tests,docs}/*" = [
    "ARG",
    "D",
    "E402",
    "F841",
]
lint.per-file-ignores."__init__.py" = [
    "E402",
]
lint.flake8-tidy-imports.ban-relative-imports = "all"
lint.pydocstyle.convention = "numpy"
lint.preview = true

[tool.pyproject-fmt]
column_width = 88
indent = 4
keep_full_version = true
max_supported_python = "3.12"

[tool.pytest.ini_options]
markers = [
    "unit: mark unit tests that do not require external interfaces and use mocking",
    "integration: mark test that interact with an external system",
]
addopts = "--verbose"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
allow_redefinition = true
disable_error_code = "empty-body"

[edgetest.envs.core]
extras = [
    "tests",
]
upgrade = [
    "Cerberus",
    "click",
    "pluggy",
    "tabulate",
    "packaging",
    "uv",
    "pyproject-fmt",
]

[edgetest.envs.low]
extras = [
    "tests",
]
lower = [
    "Cerberus",
    "click",
    "pluggy",
    "tabulate",
    "packaging",
    "uv",
]

[bumpver]
current_version = "2025.10.0"
version_pattern = "YYYY.MM.INC0"

[bumpver.file_patterns]
"docs/source/conf.py" = [
    'version = "{version}"',
]
"pyproject.toml" = [
    'current_version = "{version}"',
]
"edgetest/__init__.py" = [
    '__version__ = "{version}"',
]
